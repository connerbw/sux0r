http://www.sux0r.org/
All spelling mistakes are final and will not be refunded


### HACKER ###

http://en.wikipedia.org/wiki/Hacker_ethic


### CONVENTIONS ###

Everything in and out of sux0r is UTF-8. Make sure your text editor correctly
loads and saves UTF-8. Make sure your databases are UTF-8. Make sure your CVS
client handles UTF-8. Make sure you use multi-byte UTF-8 compatible PHP
functions. Did we mention UTF-8? Yes we know ASCII is faster. Unfortunately the
world doesn't speak American, but we can all communicate with UTF-8.

If it's not in suxRenderer(), or in an extension of suxRenderer(), or a
template, then your HTML is in the wrong place. Keep your in-line out of the
sux0r project as much as possible.

English is the base language. All other languages override it. This allows for
lazy translations. If you see English on your non-English site, your language
files are probably incomplete. Optionally, hard-coded English has crept into a
template and it should be moved into a language file.

In sux0r, Skins are called partitions. Partitioning falls back on the default
when what is being accessed can't be found . This allows for the omission of
template files you don't care about. Default sux0r templates will be used
instead. Conversely, every file in the sux0r media directory must be duplicated
when creating a new partition.


### FUTURE ###

I believe that threaded messages can represent several content paradigms,
for example:

Forum - the natural state of the threaded message.
Blog - initial post is a blog, all replies are comments.
Wiki - Initial post is a wiki, all comments are discussion.
Slideshow - like a powerpoint presentation, flow is ordered by thread.

Although sux0r 2.0 focuses on the blog, the framework for further development
is in place. Each suxThreadedMessage() is sanitized into both an HTML message
and a plain text version. Each edited suxThreadedMessage() saves a backup of
itself into a history table. The beginnings of a wiki would merely require a
clever implementation of a diff algorithm between the plaintext revisions,
which are already automatically generated on every edit.


### JOBS ###

@see: http://sourceforge.net/forum/forum.php?thread_id=2372082&forum_id=447217

Improvement to phpDocumentor style code comments. My code comments are crap, I
doubt they parse. There are probably comments thats don't make any sense
because I cut from one module and paste into another, then changed everything
except the comments. This is also good way to learn the codebase. You read the
code, you describe what it does, you generate coherent phpdoc pages, you help
others.

Regarding Naive Bayesian tokens, splitting on space/non-word characters works
for a lot of languages. But how do you identify tokens in UTF-8 languages
without spaces, like Japanese and Chinese?

UTF-8 translations. Your languages, I need them.

"Skins" known as "partitions", I need them.

Javascript improvements using Prototype/Scriptaculous. Talented
Protoype/Scriptaculous coders with cool AJAX ideas are more than welcome
to contribute.

Modules. You got ideas? We got a lack of implemented ideas! Go for it!

Optimizations. Patches welcome.

Stats and graphs. Currently we use JpGraph to generate captchas. This is
overkill. JpGraph is foresight combined with laziness. Statistical
representation of sux0r data using JpGraph is something I encourage coders to
explore.


### IDEAS? ###

Please discuss your ideas in the sux0r Developement forum, I monitor the forum
so your ideas will be read:

@see: https://sourceforge.net/forum/forum.php?forum_id=447217

Better yet, patches welcome:

@seeL https://sourceforge.net/tracker2/?group_id=131752&atid=722157


### THANKS! ###
